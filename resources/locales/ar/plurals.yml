---
:ar:
  :ordinals:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); ((n % 10 == 3 &&
      n % 100 != 13) ? :few : ((n % 10 == 1 && n % 100 != 11) ? :one : ((n % 10 ==
      2 && n % 100 != 12) ? :two : :other))) }'
    :names:
    - :few
    - :one
    - :two
    - :other
  :plurals:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); ((3..10).include?(n
      % 100) ? :few : ((11..99).include?(n % 100) ? :many : (n == 1 ? :one : (n ==
      2 ? :two : (n == 0 ? :zero : :other))))) }'
    :names:
    - :few
    - :many
    - :one
    - :two
    - :zero
    - :other
