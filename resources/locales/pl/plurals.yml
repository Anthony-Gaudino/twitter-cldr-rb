---
:pl: '{ :''pl'' => { :i18n => { :plural => { :keys => [:one, :few, :many, :other],
  :rule => lambda { |n| (n.to_i.to_s.length == 1 && ((v = n.to_s.split(".")).count
  > 1 ? v.last.length : 0) == 0) ? :one : (((v = n.to_s.split(".")).count > 1 ? v.last.length
  : 0) == 0 && (((n.to_i.to_s.length % 10) % 1).zero? && (2..4).include?(n.to_i.to_s.length
  % 10)) && (((n.to_i.to_s.length % 100) % 1).zero? && !(12..14).include?(n.to_i.to_s.length
  % 100))) ? :few : ((((v = n.to_s.split(".")).count > 1 ? v.last.length : 0) == 0
  && n.to_i.to_s.length != 1 && (((n.to_i.to_s.length % 10) % 1).zero? && (0..1).include?(n.to_i.to_s.length
  % 10))) || (((v = n.to_s.split(".")).count > 1 ? v.last.length : 0) == 0 && (((n.to_i.to_s.length
  % 10) % 1).zero? && (5..9).include?(n.to_i.to_s.length % 10))) || (((v = n.to_s.split(".")).count
  > 1 ? v.last.length : 0) == 0 && (((n.to_i.to_s.length % 100) % 1).zero? && (12..14).include?(n.to_i.to_s.length
  % 100)))) ? :many : :other } } } } }'
